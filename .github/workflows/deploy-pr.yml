# GitHub では、コミット SHA にアクションをピン留めすることが推奨されます。
# 新しいバージョンを取得するには、SHA を更新する必要があります。
# タグまたはブランチを参照することもできますが、アクションは警告なしに変更される可能性があります。

# マニフェストファイル更新のPR作成先のリポジトリを持つアカウントでPersonal-AccessTokenを発行する
# そのTokenをPR作成元のリポジトリのSetting > Secrets and variables > Actions > Repository secretsに設定しておく必要がある
# Repository secretsに設定するNAMEは↓のPR作成する際に設定したTokenと一致している必要がある。REPO_GITHUB_TOKEN

# https://docs.github.com/ja/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions

name: deploy-pr

on:
#  push:
#    branches: ['release']
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    # このjobのアウトプットとしてタグを設定
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idoutputs
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  update-manifest:
    # ↑のbuild-and-push-imageが終わったら実行
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout jpdel518/k8s-study # https://github.com/jpdel518/k8s-study/blob/main/mysql-app/sample-app-deployment.yaml
        uses: actions/checkout@v3 # 対象リポジトリのコードを持ってくる
        with:
          repository: jpdel518/k8s-study # リポジトリ指定
          ref: main # ブランチ指定
      - name: Update minifest file
        env: # 環境変数を設定できる
          YAML_PATH: /mysql-app/sample-app-deployment.yaml
          CONTAINER_NAME: fastapi-sample
          IMAGE_FULL_NAME: ${{ needs.build-and-push-image.outputs.tags }} # pull-requests -> ghcr:io/jpdel518/fastapi-sample:pr-{pull-request-num}
        # spec.template.spec.containerの中からnameが${CONTAINER_NAME}のものをselectしてimageを${IMAGE_FULL_NAME}に変更する。最後にyqコマンドに${YAML_PATH}を渡す
        run: |
          yq e -l "(.spec.template.spec.containers[]|select(.name == \"${CONTAINER_NAME}\").image)|=\"${IMAGE_FULL_NAME}\"" ${YAML_PATH}
          cat ${YAML_PATH}
      - name: Create PR
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.REPO_GITHUB_TOKEN }} # 別のリポジトリにpushするのでtokenが必要
          title: "Update fastapi-sample" # pull requestのタイトル
          base: main # 対象のブランチ
          draft: true # ドラフトとしてpull requestを作成する
          body: |
            # Changes
            - Update `fastapi-sample` image
